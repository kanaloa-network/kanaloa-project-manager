#!/run/current-system/sw/bin/python3
import subprocess
import signal
import time
import textwrap
import os, sys

# Function to run a command in a specific directory
def run_nix_develop_shell(directory, command, output=subprocess.DEVNULL):
    nix_develop_cmd = "nix develop"

    process = subprocess.Popen(
        f"{nix_develop_cmd} --command sh -c '{command}'",
        shell=True, 
        cwd=directory,
        stdout=output,
        stderr=subprocess.DEVNULL
    )

    time.sleep(0.5)

    return process

# Signal handler function to handle Ctrl-C signal
def gen_signal_handler(child_processes):
    def signal_handler(sig, frame):
        print("\nCtrl-C received. Terminating child processes...")
        for process in child_processes:
            try:
                os.kill(process.pid, signal.SIGTERM)
            except ProcessLookupError:
                pass
        sys.exit(0)
    return signal_handler

# Main script logic
if __name__ == "__main__":
    kana_contracts_dir = os.path.abspath("../kanaloa-contracts-staging")
    this_dir = os.path.dirname(os.path.abspath(__file__))

    deployment_script = "scripts/demo.s.sol:Demo"
    deployment_sender = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
    deployment_key = "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
    demo_wallet = "0xd1B296572d08DfF6d9603b9B267Fcf1326Ccfe3D"
    # This is obviously a testnet privkey generated by anvil. I am not THAT dumb.

    child_processes = [
        run_nix_develop_shell(kana_contracts_dir, "anvil", None),
        run_nix_develop_shell(
            kana_contracts_dir,
            (
                f"forge script {deployment_script} "
                f"--fork-url http://localhost:8545  "
                f"--broadcast "
                f"--sender {deployment_sender} "
                f"--private-key {deployment_key} "
                f"&& "
                f"cast send " 
                f"--private-key {deployment_key} " 
                f"{demo_wallet} "
                f"--value 1ether"
            )
        ),
        run_nix_develop_shell(this_dir, "npm run watch"),
        run_nix_develop_shell(this_dir, "npm run serve"),
    ]

    # Register the signal handler for Ctrl-C
    signal.signal(signal.SIGINT, gen_signal_handler(child_processes))

    # Wait for child processes to finish
    for process in child_processes:
        process.wait()
