"use strict";
(self["webpackChunkkanaloa_project_manager"] = self["webpackChunkkanaloa_project_manager"] || []).push([["node_modules_lion_validate-messages_translations_bg_js"],{

/***/ "./node_modules/@lion/validate-messages/translations/bg.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@lion/validate-messages/translations/bg.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  error: {
    Required: 'Моля, въведете също {fieldName}.',
    EqualsLength: 'Моля, въведете правилно {fieldName} от точно {params} знака.',
    MinLength: 'Моля, въведете правилен {fieldName} (поне {params}).',
    MaxLength: 'Моля, въведете правилен {fieldName} (до {params} знака).',
    MinMaxLength: 'Моля, въведете правилен {fieldName} (между {params.min} и {params.max} знака).',
    Pattern: 'Введіть правильні дані {fieldName}.',
    IsNumber: 'Введіть правильні дані {fieldName}.',
    MinNumber: 'Моля, въведете {fieldName} повече от {params}.',
    MaxNumber: 'Моля, въведете {fieldName} по-малко от {params}.',
    MinMaxNumber: 'Моля, въведете {fieldName} между {params.min} и {params.max}.',
    IsDate: 'Моля, въведете дата (ДД.ММ.ГГГГ r.).',
    MinDate: 'Моля, въведете {fieldName} след {params, date, YYYYMMDD}.',
    MaxDate: 'Моля, въведете {fieldName} преди {params, date, YYYYMMDD}.',
    MinMaxDate:
      'Моля, въведете {fieldName} между {params.min, date, YYYYMMDD} и {params.max, date, YYYYMMDD}.',
    IsDateDisabled: 'Тази дата не е на разположение, моля, изберете друга.',
    IsEmail: 'Моля, въведете валиден {fieldName} с формат "name@example.com".',
  },
  warning: {
    Required: 'Моля, въведете също {fieldName}.',
    EqualsLength: 'Моля, въведете правилно {fieldName} от точно {params} знака.',
    MinLength: 'Моля, въведете правилен {fieldName} (поне {params}).',
    MaxLength: 'Моля, въведете правилен {fieldName} (до {params} знака).',
    MinMaxLength: 'Моля, въведете правилен {fieldName} (между {params.min} и {params.max} знака).',
    IsNumber: 'Введіть правильні дані {fieldName}.',
    MinNumber: 'Моля, въведете {fieldName} повече от {params}.',
    MaxNumber: 'Моля, въведете {fieldName} по-малко от {params}.',
    MinMaxNumber: 'Моля, въведете {fieldName} между {params.min} и {params.max}.',
    IsDate: 'Моля, въведете дата (ДД.ММ.ГГГГ r.).',
    MinDate: 'Моля, въведете {fieldName} след {params, date, YYYYMMDD}.',
    MaxDate: 'Моля, въведете {fieldName} преди {params, date, YYYYMMDD}.',
    MinMaxDate:
      'Моля, въведете {fieldName} между {params.min, date, YYYYMMDD} и {params.max, date, YYYYMMDD}.',
    IsDateDisabled: 'Тази дата не е на разположение, моля, изберете друга.',
    IsEmail: 'Моля, въведете валиден {fieldName} с формат "name@example.com".',
  },
  success: {
    DefaultOk: 'Добре',
    RandomOk:
      'success.DefaultOk,success.Correct,success.Succeeded,success.Ok,success.ThisIsRight,success.Changed,success.OkCorrect',
    Correct: 'Правилно',
    Succeeded: 'Успешно',
    Ok: 'OK!',
    ThisIsRight: 'Това е според очакваното.',
    Changed: 'Променено!',
    OkCorrect: 'Добре, правилно е.',
  },
});


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2xpb25fdmFsaWRhdGUtbWVzc2FnZXNfdHJhbnNsYXRpb25zX2JnX2pzLmJ1bmRsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsaUVBQWU7QUFDZjtBQUNBLG9DQUFvQyxVQUFVO0FBQzlDLDRDQUE0QyxXQUFXLFVBQVUsUUFBUTtBQUN6RSx5Q0FBeUMsV0FBVyxPQUFPLE9BQU87QUFDbEUseUNBQXlDLFdBQVcsS0FBSyxRQUFRO0FBQ2pFLDRDQUE0QyxXQUFXLFFBQVEsWUFBWSxHQUFHLFlBQVk7QUFDMUYsc0NBQXNDLFVBQVU7QUFDaEQsdUNBQXVDLFVBQVU7QUFDakQsZ0NBQWdDLFdBQVcsV0FBVyxPQUFPO0FBQzdELGdDQUFnQyxXQUFXLGFBQWEsT0FBTztBQUMvRCxtQ0FBbUMsV0FBVyxPQUFPLFlBQVksR0FBRyxXQUFXO0FBQy9FO0FBQ0EsOEJBQThCLFdBQVcsTUFBTSx1QkFBdUI7QUFDdEUsOEJBQThCLFdBQVcsT0FBTyx1QkFBdUI7QUFDdkU7QUFDQSx1QkFBdUIsV0FBVyxPQUFPLDRCQUE0QixHQUFHLDJCQUEyQjtBQUNuRztBQUNBLHNDQUFzQyxXQUFXO0FBQ2pELEdBQUc7QUFDSDtBQUNBLG9DQUFvQyxVQUFVO0FBQzlDLDRDQUE0QyxXQUFXLFVBQVUsUUFBUTtBQUN6RSx5Q0FBeUMsV0FBVyxPQUFPLE9BQU87QUFDbEUseUNBQXlDLFdBQVcsS0FBSyxRQUFRO0FBQ2pFLDRDQUE0QyxXQUFXLFFBQVEsWUFBWSxHQUFHLFlBQVk7QUFDMUYsdUNBQXVDLFVBQVU7QUFDakQsZ0NBQWdDLFdBQVcsV0FBVyxPQUFPO0FBQzdELGdDQUFnQyxXQUFXLGFBQWEsT0FBTztBQUMvRCxtQ0FBbUMsV0FBVyxPQUFPLFlBQVksR0FBRyxXQUFXO0FBQy9FO0FBQ0EsOEJBQThCLFdBQVcsTUFBTSx1QkFBdUI7QUFDdEUsOEJBQThCLFdBQVcsT0FBTyx1QkFBdUI7QUFDdkU7QUFDQSx1QkFBdUIsV0FBVyxPQUFPLDRCQUE0QixHQUFHLDJCQUEyQjtBQUNuRztBQUNBLHNDQUFzQyxXQUFXO0FBQ2pELEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9rYW5hbG9hLXByb2plY3QtbWFuYWdlci8uL25vZGVfbW9kdWxlcy9AbGlvbi92YWxpZGF0ZS1tZXNzYWdlcy90cmFuc2xhdGlvbnMvYmcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICBlcnJvcjoge1xuICAgIFJlcXVpcmVkOiAn0JzQvtC70Y8sINCy0YrQstC10LTQtdGC0LUg0YHRitGJ0L4ge2ZpZWxkTmFtZX0uJyxcbiAgICBFcXVhbHNMZW5ndGg6ICfQnNC+0LvRjywg0LLRitCy0LXQtNC10YLQtSDQv9GA0LDQstC40LvQvdC+IHtmaWVsZE5hbWV9INC+0YIg0YLQvtGH0L3QviB7cGFyYW1zfSDQt9C90LDQutCwLicsXG4gICAgTWluTGVuZ3RoOiAn0JzQvtC70Y8sINCy0YrQstC10LTQtdGC0LUg0L/RgNCw0LLQuNC70LXQvSB7ZmllbGROYW1lfSAo0L/QvtC90LUge3BhcmFtc30pLicsXG4gICAgTWF4TGVuZ3RoOiAn0JzQvtC70Y8sINCy0YrQstC10LTQtdGC0LUg0L/RgNCw0LLQuNC70LXQvSB7ZmllbGROYW1lfSAo0LTQviB7cGFyYW1zfSDQt9C90LDQutCwKS4nLFxuICAgIE1pbk1heExlbmd0aDogJ9Cc0L7Qu9GPLCDQstGK0LLQtdC00LXRgtC1INC/0YDQsNCy0LjQu9C10L0ge2ZpZWxkTmFtZX0gKNC80LXQttC00YMge3BhcmFtcy5taW59INC4IHtwYXJhbXMubWF4fSDQt9C90LDQutCwKS4nLFxuICAgIFBhdHRlcm46ICfQktCy0LXQtNGW0YLRjCDQv9GA0LDQstC40LvRjNC90ZYg0LTQsNC90ZYge2ZpZWxkTmFtZX0uJyxcbiAgICBJc051bWJlcjogJ9CS0LLQtdC00ZbRgtGMINC/0YDQsNCy0LjQu9GM0L3RliDQtNCw0L3RliB7ZmllbGROYW1lfS4nLFxuICAgIE1pbk51bWJlcjogJ9Cc0L7Qu9GPLCDQstGK0LLQtdC00LXRgtC1IHtmaWVsZE5hbWV9INC/0L7QstC10YfQtSDQvtGCIHtwYXJhbXN9LicsXG4gICAgTWF4TnVtYmVyOiAn0JzQvtC70Y8sINCy0YrQstC10LTQtdGC0LUge2ZpZWxkTmFtZX0g0L/Qvi3QvNCw0LvQutC+INC+0YIge3BhcmFtc30uJyxcbiAgICBNaW5NYXhOdW1iZXI6ICfQnNC+0LvRjywg0LLRitCy0LXQtNC10YLQtSB7ZmllbGROYW1lfSDQvNC10LbQtNGDIHtwYXJhbXMubWlufSDQuCB7cGFyYW1zLm1heH0uJyxcbiAgICBJc0RhdGU6ICfQnNC+0LvRjywg0LLRitCy0LXQtNC10YLQtSDQtNCw0YLQsCAo0JTQlC7QnNCcLtCT0JPQk9CTIHIuKS4nLFxuICAgIE1pbkRhdGU6ICfQnNC+0LvRjywg0LLRitCy0LXQtNC10YLQtSB7ZmllbGROYW1lfSDRgdC70LXQtCB7cGFyYW1zLCBkYXRlLCBZWVlZTU1ERH0uJyxcbiAgICBNYXhEYXRlOiAn0JzQvtC70Y8sINCy0YrQstC10LTQtdGC0LUge2ZpZWxkTmFtZX0g0L/RgNC10LTQuCB7cGFyYW1zLCBkYXRlLCBZWVlZTU1ERH0uJyxcbiAgICBNaW5NYXhEYXRlOlxuICAgICAgJ9Cc0L7Qu9GPLCDQstGK0LLQtdC00LXRgtC1IHtmaWVsZE5hbWV9INC80LXQttC00YMge3BhcmFtcy5taW4sIGRhdGUsIFlZWVlNTUREfSDQuCB7cGFyYW1zLm1heCwgZGF0ZSwgWVlZWU1NRER9LicsXG4gICAgSXNEYXRlRGlzYWJsZWQ6ICfQotCw0LfQuCDQtNCw0YLQsCDQvdC1INC1INC90LAg0YDQsNC30L/QvtC70L7QttC10L3QuNC1LCDQvNC+0LvRjywg0LjQt9Cx0LXRgNC10YLQtSDQtNGA0YPQs9CwLicsXG4gICAgSXNFbWFpbDogJ9Cc0L7Qu9GPLCDQstGK0LLQtdC00LXRgtC1INCy0LDQu9C40LTQtdC9IHtmaWVsZE5hbWV9INGBINGE0L7RgNC80LDRgiBcIm5hbWVAZXhhbXBsZS5jb21cIi4nLFxuICB9LFxuICB3YXJuaW5nOiB7XG4gICAgUmVxdWlyZWQ6ICfQnNC+0LvRjywg0LLRitCy0LXQtNC10YLQtSDRgdGK0YnQviB7ZmllbGROYW1lfS4nLFxuICAgIEVxdWFsc0xlbmd0aDogJ9Cc0L7Qu9GPLCDQstGK0LLQtdC00LXRgtC1INC/0YDQsNCy0LjQu9C90L4ge2ZpZWxkTmFtZX0g0L7RgiDRgtC+0YfQvdC+IHtwYXJhbXN9INC30L3QsNC60LAuJyxcbiAgICBNaW5MZW5ndGg6ICfQnNC+0LvRjywg0LLRitCy0LXQtNC10YLQtSDQv9GA0LDQstC40LvQtdC9IHtmaWVsZE5hbWV9ICjQv9C+0L3QtSB7cGFyYW1zfSkuJyxcbiAgICBNYXhMZW5ndGg6ICfQnNC+0LvRjywg0LLRitCy0LXQtNC10YLQtSDQv9GA0LDQstC40LvQtdC9IHtmaWVsZE5hbWV9ICjQtNC+IHtwYXJhbXN9INC30L3QsNC60LApLicsXG4gICAgTWluTWF4TGVuZ3RoOiAn0JzQvtC70Y8sINCy0YrQstC10LTQtdGC0LUg0L/RgNCw0LLQuNC70LXQvSB7ZmllbGROYW1lfSAo0LzQtdC20LTRgyB7cGFyYW1zLm1pbn0g0Lgge3BhcmFtcy5tYXh9INC30L3QsNC60LApLicsXG4gICAgSXNOdW1iZXI6ICfQktCy0LXQtNGW0YLRjCDQv9GA0LDQstC40LvRjNC90ZYg0LTQsNC90ZYge2ZpZWxkTmFtZX0uJyxcbiAgICBNaW5OdW1iZXI6ICfQnNC+0LvRjywg0LLRitCy0LXQtNC10YLQtSB7ZmllbGROYW1lfSDQv9C+0LLQtdGH0LUg0L7RgiB7cGFyYW1zfS4nLFxuICAgIE1heE51bWJlcjogJ9Cc0L7Qu9GPLCDQstGK0LLQtdC00LXRgtC1IHtmaWVsZE5hbWV9INC/0L4t0LzQsNC70LrQviDQvtGCIHtwYXJhbXN9LicsXG4gICAgTWluTWF4TnVtYmVyOiAn0JzQvtC70Y8sINCy0YrQstC10LTQtdGC0LUge2ZpZWxkTmFtZX0g0LzQtdC20LTRgyB7cGFyYW1zLm1pbn0g0Lgge3BhcmFtcy5tYXh9LicsXG4gICAgSXNEYXRlOiAn0JzQvtC70Y8sINCy0YrQstC10LTQtdGC0LUg0LTQsNGC0LAgKNCU0JQu0JzQnC7Qk9CT0JPQkyByLikuJyxcbiAgICBNaW5EYXRlOiAn0JzQvtC70Y8sINCy0YrQstC10LTQtdGC0LUge2ZpZWxkTmFtZX0g0YHQu9C10LQge3BhcmFtcywgZGF0ZSwgWVlZWU1NRER9LicsXG4gICAgTWF4RGF0ZTogJ9Cc0L7Qu9GPLCDQstGK0LLQtdC00LXRgtC1IHtmaWVsZE5hbWV9INC/0YDQtdC00Lgge3BhcmFtcywgZGF0ZSwgWVlZWU1NRER9LicsXG4gICAgTWluTWF4RGF0ZTpcbiAgICAgICfQnNC+0LvRjywg0LLRitCy0LXQtNC10YLQtSB7ZmllbGROYW1lfSDQvNC10LbQtNGDIHtwYXJhbXMubWluLCBkYXRlLCBZWVlZTU1ERH0g0Lgge3BhcmFtcy5tYXgsIGRhdGUsIFlZWVlNTUREfS4nLFxuICAgIElzRGF0ZURpc2FibGVkOiAn0KLQsNC30Lgg0LTQsNGC0LAg0L3QtSDQtSDQvdCwINGA0LDQt9C/0L7Qu9C+0LbQtdC90LjQtSwg0LzQvtC70Y8sINC40LfQsdC10YDQtdGC0LUg0LTRgNGD0LPQsC4nLFxuICAgIElzRW1haWw6ICfQnNC+0LvRjywg0LLRitCy0LXQtNC10YLQtSDQstCw0LvQuNC00LXQvSB7ZmllbGROYW1lfSDRgSDRhNC+0YDQvNCw0YIgXCJuYW1lQGV4YW1wbGUuY29tXCIuJyxcbiAgfSxcbiAgc3VjY2Vzczoge1xuICAgIERlZmF1bHRPazogJ9CU0L7QsdGA0LUnLFxuICAgIFJhbmRvbU9rOlxuICAgICAgJ3N1Y2Nlc3MuRGVmYXVsdE9rLHN1Y2Nlc3MuQ29ycmVjdCxzdWNjZXNzLlN1Y2NlZWRlZCxzdWNjZXNzLk9rLHN1Y2Nlc3MuVGhpc0lzUmlnaHQsc3VjY2Vzcy5DaGFuZ2VkLHN1Y2Nlc3MuT2tDb3JyZWN0JyxcbiAgICBDb3JyZWN0OiAn0J/RgNCw0LLQuNC70L3QvicsXG4gICAgU3VjY2VlZGVkOiAn0KPRgdC/0LXRiNC90L4nLFxuICAgIE9rOiAnT0shJyxcbiAgICBUaGlzSXNSaWdodDogJ9Ci0L7QstCwINC1INGB0L/QvtGA0LXQtCDQvtGH0LDQutCy0LDQvdC+0YLQvi4nLFxuICAgIENoYW5nZWQ6ICfQn9GA0L7QvNC10L3QtdC90L4hJyxcbiAgICBPa0NvcnJlY3Q6ICfQlNC+0LHRgNC1LCDQv9GA0LDQstC40LvQvdC+INC1LicsXG4gIH0sXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9