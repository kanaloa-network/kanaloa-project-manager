"use strict";
(self["webpackChunkkanaloa_project_manager"] = self["webpackChunkkanaloa_project_manager"] || []).push([["node_modules_lion_validate-messages_translations_de-DE_js"],{

/***/ "./node_modules/@lion/validate-messages/translations/de-DE.js":
/*!********************************************************************!*\
  !*** ./node_modules/@lion/validate-messages/translations/de-DE.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _de_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./de.js */ "./node_modules/@lion/validate-messages/translations/de.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  ..._de_js__WEBPACK_IMPORTED_MODULE_0__["default"],
});


/***/ }),

/***/ "./node_modules/@lion/validate-messages/translations/de.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@lion/validate-messages/translations/de.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  error: {
    Required: '{fieldName} muss ausgefüllt werden.',
    EqualsLength: 'Geben Sie einen korrekten Wert für {fieldName} mit exakt {params} Zeichen ein.',
    MinLength: 'Du musst mindestens {params} Zeichen eingeben.',
    MaxLength: 'Du kannst maximal {params} Zeichen eingeben.',
    MinMaxLength: 'Du musst zwischen {params.min} und {params.max} Zeichen eingeben.',
    Pattern: 'Geben Sie ein gültiges {fieldName} ein.',
    IsNumber: 'Geben Sie ein gültiges {fieldName} ein.',
    MinNumber: 'Geben Sie für {fieldName} einen Wert über {params} ein.',
    MaxNumber: 'Geben Sie für {fieldName} einen Wert unter {params} ein.',
    MinMaxNumber:
      'Geben Sie für {fieldName} einen Wert zwischen {params.min} und {params.max} ein.',
    IsDate: 'Bitte geben Sie ein gültiges Datum ein (TT.MM.JJJJ).',
    MinDate: 'Geben Sie für {fieldName} einen Wert ein, der nach {params, date, YYYYMMDD} liegt.',
    MaxDate: 'Geben Sie für {fieldName} einen Wert ein, der vor {params, date, YYYYMMDD} liegt.',
    MinMaxDate:
      'Geben Sie für {fieldName} einen Wert zwischen {params.min, date, YYYYMMDD} und {params.max, date, YYYYMMDD} ein.',
    IsDateDisabled: 'Dieses Datum ist nicht verfügbar, bitte wählen Sie ein anderes Datum.',
    IsEmail: 'Geben Sie einen gültige {fieldName} im Format „name@example.com“ ein.',
  },
  warning: {
    Required: '{fieldName} sollte ausgefüllt werden.',
    EqualsLength: 'Geben Sie einen korrekten Wert für {fieldName} mit exakt {params} Zeichen ein.',
    MinLength: 'Du solltest mindestens {params} Zeichen eingeben.',
    MaxLength: 'Du kannst maximal {params} Zeichen eingeben.',
    MinMaxLength: 'Du solltest zwischen {params.min} und {params.max} Zeichen eingeben.',
    IsNumber: 'Geben Sie ein gültiges {fieldName} ein.',
    MinNumber: 'Geben Sie für {fieldName} einen Wert über {params} ein.',
    MaxNumber: 'Geben Sie für {fieldName} einen Wert unter {params} ein.',
    MinMaxNumber:
      'Geben Sie für {fieldName} einen Wert zwischen {params.min} und {params.max} ein.',
    IsDate: 'Bitte geben Sie ein gültiges Datum ein (TT.MM.JJJJ).',
    MinDate: 'Geben Sie für {fieldName} einen Wert ein, der nach {params, date, YYYYMMDD} liegt.',
    MaxDate: 'Geben Sie für {fieldName} einen Wert ein, der vor {params, date, YYYYMMDD} liegt.',
    MinMaxDate:
      'Geben Sie für {fieldName} einen Wert zwischen {params.min, date, YYYYMMDD} und {params.max, date, YYYYMMDD} ein.',
    IsDateDisabled: 'Dieses Datum ist nicht verfügbar, bitte wählen Sie ein anderes Datum.',
    IsEmail: 'Geben Sie einen gültige {fieldName} im Format „name@example.com“ ein.',
  },
  success: {
    DefaultOk: 'OK',
    RandomOk:
      'success.DefaultOk,success.Correct,success.Succeeded,success.Ok,success.ThisIsRight,success.Changed,success.OkCorrect',
    Correct: 'Richtig',
    Succeeded: 'Erfolgreich',
    Ok: 'OK!',
    ThisIsRight: 'Das ist richtig.',
    Changed: 'Geändert',
    OkCorrect: 'OK, richtig.',
  },
});


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2xpb25fdmFsaWRhdGUtbWVzc2FnZXNfdHJhbnNsYXRpb25zX2RlLURFX2pzLmJ1bmRsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUF5Qjs7QUFFekIsaUVBQWU7QUFDZixLQUFLLDhDQUFFO0FBQ1AsQ0FBQyxFQUFDOzs7Ozs7Ozs7Ozs7Ozs7QUNKRixpRUFBZTtBQUNmO0FBQ0EsZ0JBQWdCLFdBQVc7QUFDM0IsdURBQXVELFdBQVcsV0FBVyxRQUFRO0FBQ3JGLHFDQUFxQyxRQUFRO0FBQzdDLG1DQUFtQyxRQUFRO0FBQzNDLHNDQUFzQyxZQUFZLEtBQUssWUFBWTtBQUNuRSxzQ0FBc0MsV0FBVztBQUNqRCx1Q0FBdUMsV0FBVztBQUNsRCwrQkFBK0IsV0FBVyxpQkFBaUIsUUFBUTtBQUNuRSwrQkFBK0IsV0FBVyxrQkFBa0IsUUFBUTtBQUNwRTtBQUNBLHNCQUFzQixXQUFXLHFCQUFxQixZQUFZLEtBQUssWUFBWTtBQUNuRjtBQUNBLDZCQUE2QixXQUFXLDBCQUEwQix3QkFBd0I7QUFDMUYsNkJBQTZCLFdBQVcseUJBQXlCLHdCQUF3QjtBQUN6RjtBQUNBLHNCQUFzQixXQUFXLHFCQUFxQiw0QkFBNEIsS0FBSyw0QkFBNEI7QUFDbkg7QUFDQSx1Q0FBdUMsV0FBVztBQUNsRCxHQUFHO0FBQ0g7QUFDQSxnQkFBZ0IsV0FBVztBQUMzQix1REFBdUQsV0FBVyxXQUFXLFFBQVE7QUFDckYsd0NBQXdDLFFBQVE7QUFDaEQsbUNBQW1DLFFBQVE7QUFDM0MseUNBQXlDLFlBQVksS0FBSyxZQUFZO0FBQ3RFLHVDQUF1QyxXQUFXO0FBQ2xELCtCQUErQixXQUFXLGlCQUFpQixRQUFRO0FBQ25FLCtCQUErQixXQUFXLGtCQUFrQixRQUFRO0FBQ3BFO0FBQ0Esc0JBQXNCLFdBQVcscUJBQXFCLFlBQVksS0FBSyxZQUFZO0FBQ25GO0FBQ0EsNkJBQTZCLFdBQVcsMEJBQTBCLHdCQUF3QjtBQUMxRiw2QkFBNkIsV0FBVyx5QkFBeUIsd0JBQXdCO0FBQ3pGO0FBQ0Esc0JBQXNCLFdBQVcscUJBQXFCLDRCQUE0QixLQUFLLDRCQUE0QjtBQUNuSDtBQUNBLHVDQUF1QyxXQUFXO0FBQ2xELEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9rYW5hbG9hLXByb2plY3QtbWFuYWdlci8uL25vZGVfbW9kdWxlcy9AbGlvbi92YWxpZGF0ZS1tZXNzYWdlcy90cmFuc2xhdGlvbnMvZGUtREUuanMiLCJ3ZWJwYWNrOi8va2FuYWxvYS1wcm9qZWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvQGxpb24vdmFsaWRhdGUtbWVzc2FnZXMvdHJhbnNsYXRpb25zL2RlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZSBmcm9tICcuL2RlLmpzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICAuLi5kZSxcbn07XG4iLCJleHBvcnQgZGVmYXVsdCB7XG4gIGVycm9yOiB7XG4gICAgUmVxdWlyZWQ6ICd7ZmllbGROYW1lfSBtdXNzIGF1c2dlZsO8bGx0IHdlcmRlbi4nLFxuICAgIEVxdWFsc0xlbmd0aDogJ0dlYmVuIFNpZSBlaW5lbiBrb3JyZWt0ZW4gV2VydCBmw7xyIHtmaWVsZE5hbWV9IG1pdCBleGFrdCB7cGFyYW1zfSBaZWljaGVuIGVpbi4nLFxuICAgIE1pbkxlbmd0aDogJ0R1IG11c3N0IG1pbmRlc3RlbnMge3BhcmFtc30gWmVpY2hlbiBlaW5nZWJlbi4nLFxuICAgIE1heExlbmd0aDogJ0R1IGthbm5zdCBtYXhpbWFsIHtwYXJhbXN9IFplaWNoZW4gZWluZ2ViZW4uJyxcbiAgICBNaW5NYXhMZW5ndGg6ICdEdSBtdXNzdCB6d2lzY2hlbiB7cGFyYW1zLm1pbn0gdW5kIHtwYXJhbXMubWF4fSBaZWljaGVuIGVpbmdlYmVuLicsXG4gICAgUGF0dGVybjogJ0dlYmVuIFNpZSBlaW4gZ8O8bHRpZ2VzIHtmaWVsZE5hbWV9IGVpbi4nLFxuICAgIElzTnVtYmVyOiAnR2ViZW4gU2llIGVpbiBnw7xsdGlnZXMge2ZpZWxkTmFtZX0gZWluLicsXG4gICAgTWluTnVtYmVyOiAnR2ViZW4gU2llIGbDvHIge2ZpZWxkTmFtZX0gZWluZW4gV2VydCDDvGJlciB7cGFyYW1zfSBlaW4uJyxcbiAgICBNYXhOdW1iZXI6ICdHZWJlbiBTaWUgZsO8ciB7ZmllbGROYW1lfSBlaW5lbiBXZXJ0IHVudGVyIHtwYXJhbXN9IGVpbi4nLFxuICAgIE1pbk1heE51bWJlcjpcbiAgICAgICdHZWJlbiBTaWUgZsO8ciB7ZmllbGROYW1lfSBlaW5lbiBXZXJ0IHp3aXNjaGVuIHtwYXJhbXMubWlufSB1bmQge3BhcmFtcy5tYXh9IGVpbi4nLFxuICAgIElzRGF0ZTogJ0JpdHRlIGdlYmVuIFNpZSBlaW4gZ8O8bHRpZ2VzIERhdHVtIGVpbiAoVFQuTU0uSkpKSikuJyxcbiAgICBNaW5EYXRlOiAnR2ViZW4gU2llIGbDvHIge2ZpZWxkTmFtZX0gZWluZW4gV2VydCBlaW4sIGRlciBuYWNoIHtwYXJhbXMsIGRhdGUsIFlZWVlNTUREfSBsaWVndC4nLFxuICAgIE1heERhdGU6ICdHZWJlbiBTaWUgZsO8ciB7ZmllbGROYW1lfSBlaW5lbiBXZXJ0IGVpbiwgZGVyIHZvciB7cGFyYW1zLCBkYXRlLCBZWVlZTU1ERH0gbGllZ3QuJyxcbiAgICBNaW5NYXhEYXRlOlxuICAgICAgJ0dlYmVuIFNpZSBmw7xyIHtmaWVsZE5hbWV9IGVpbmVuIFdlcnQgendpc2NoZW4ge3BhcmFtcy5taW4sIGRhdGUsIFlZWVlNTUREfSB1bmQge3BhcmFtcy5tYXgsIGRhdGUsIFlZWVlNTUREfSBlaW4uJyxcbiAgICBJc0RhdGVEaXNhYmxlZDogJ0RpZXNlcyBEYXR1bSBpc3QgbmljaHQgdmVyZsO8Z2JhciwgYml0dGUgd8OkaGxlbiBTaWUgZWluIGFuZGVyZXMgRGF0dW0uJyxcbiAgICBJc0VtYWlsOiAnR2ViZW4gU2llIGVpbmVuIGfDvGx0aWdlIHtmaWVsZE5hbWV9IGltIEZvcm1hdCDigJ5uYW1lQGV4YW1wbGUuY29t4oCcIGVpbi4nLFxuICB9LFxuICB3YXJuaW5nOiB7XG4gICAgUmVxdWlyZWQ6ICd7ZmllbGROYW1lfSBzb2xsdGUgYXVzZ2Vmw7xsbHQgd2VyZGVuLicsXG4gICAgRXF1YWxzTGVuZ3RoOiAnR2ViZW4gU2llIGVpbmVuIGtvcnJla3RlbiBXZXJ0IGbDvHIge2ZpZWxkTmFtZX0gbWl0IGV4YWt0IHtwYXJhbXN9IFplaWNoZW4gZWluLicsXG4gICAgTWluTGVuZ3RoOiAnRHUgc29sbHRlc3QgbWluZGVzdGVucyB7cGFyYW1zfSBaZWljaGVuIGVpbmdlYmVuLicsXG4gICAgTWF4TGVuZ3RoOiAnRHUga2FubnN0IG1heGltYWwge3BhcmFtc30gWmVpY2hlbiBlaW5nZWJlbi4nLFxuICAgIE1pbk1heExlbmd0aDogJ0R1IHNvbGx0ZXN0IHp3aXNjaGVuIHtwYXJhbXMubWlufSB1bmQge3BhcmFtcy5tYXh9IFplaWNoZW4gZWluZ2ViZW4uJyxcbiAgICBJc051bWJlcjogJ0dlYmVuIFNpZSBlaW4gZ8O8bHRpZ2VzIHtmaWVsZE5hbWV9IGVpbi4nLFxuICAgIE1pbk51bWJlcjogJ0dlYmVuIFNpZSBmw7xyIHtmaWVsZE5hbWV9IGVpbmVuIFdlcnQgw7xiZXIge3BhcmFtc30gZWluLicsXG4gICAgTWF4TnVtYmVyOiAnR2ViZW4gU2llIGbDvHIge2ZpZWxkTmFtZX0gZWluZW4gV2VydCB1bnRlciB7cGFyYW1zfSBlaW4uJyxcbiAgICBNaW5NYXhOdW1iZXI6XG4gICAgICAnR2ViZW4gU2llIGbDvHIge2ZpZWxkTmFtZX0gZWluZW4gV2VydCB6d2lzY2hlbiB7cGFyYW1zLm1pbn0gdW5kIHtwYXJhbXMubWF4fSBlaW4uJyxcbiAgICBJc0RhdGU6ICdCaXR0ZSBnZWJlbiBTaWUgZWluIGfDvGx0aWdlcyBEYXR1bSBlaW4gKFRULk1NLkpKSkopLicsXG4gICAgTWluRGF0ZTogJ0dlYmVuIFNpZSBmw7xyIHtmaWVsZE5hbWV9IGVpbmVuIFdlcnQgZWluLCBkZXIgbmFjaCB7cGFyYW1zLCBkYXRlLCBZWVlZTU1ERH0gbGllZ3QuJyxcbiAgICBNYXhEYXRlOiAnR2ViZW4gU2llIGbDvHIge2ZpZWxkTmFtZX0gZWluZW4gV2VydCBlaW4sIGRlciB2b3Ige3BhcmFtcywgZGF0ZSwgWVlZWU1NRER9IGxpZWd0LicsXG4gICAgTWluTWF4RGF0ZTpcbiAgICAgICdHZWJlbiBTaWUgZsO8ciB7ZmllbGROYW1lfSBlaW5lbiBXZXJ0IHp3aXNjaGVuIHtwYXJhbXMubWluLCBkYXRlLCBZWVlZTU1ERH0gdW5kIHtwYXJhbXMubWF4LCBkYXRlLCBZWVlZTU1ERH0gZWluLicsXG4gICAgSXNEYXRlRGlzYWJsZWQ6ICdEaWVzZXMgRGF0dW0gaXN0IG5pY2h0IHZlcmbDvGdiYXIsIGJpdHRlIHfDpGhsZW4gU2llIGVpbiBhbmRlcmVzIERhdHVtLicsXG4gICAgSXNFbWFpbDogJ0dlYmVuIFNpZSBlaW5lbiBnw7xsdGlnZSB7ZmllbGROYW1lfSBpbSBGb3JtYXQg4oCebmFtZUBleGFtcGxlLmNvbeKAnCBlaW4uJyxcbiAgfSxcbiAgc3VjY2Vzczoge1xuICAgIERlZmF1bHRPazogJ09LJyxcbiAgICBSYW5kb21PazpcbiAgICAgICdzdWNjZXNzLkRlZmF1bHRPayxzdWNjZXNzLkNvcnJlY3Qsc3VjY2Vzcy5TdWNjZWVkZWQsc3VjY2Vzcy5PayxzdWNjZXNzLlRoaXNJc1JpZ2h0LHN1Y2Nlc3MuQ2hhbmdlZCxzdWNjZXNzLk9rQ29ycmVjdCcsXG4gICAgQ29ycmVjdDogJ1JpY2h0aWcnLFxuICAgIFN1Y2NlZWRlZDogJ0VyZm9sZ3JlaWNoJyxcbiAgICBPazogJ09LIScsXG4gICAgVGhpc0lzUmlnaHQ6ICdEYXMgaXN0IHJpY2h0aWcuJyxcbiAgICBDaGFuZ2VkOiAnR2XDpG5kZXJ0JyxcbiAgICBPa0NvcnJlY3Q6ICdPSywgcmljaHRpZy4nLFxuICB9LFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==