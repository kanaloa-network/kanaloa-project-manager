"use strict";
(self["webpackChunkkanaloa_project_manager"] = self["webpackChunkkanaloa_project_manager"] || []).push([["node_modules_lion_validate-messages_translations_ru_js"],{

/***/ "./node_modules/@lion/validate-messages/translations/ru.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@lion/validate-messages/translations/ru.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  error: {
    Required: 'Введите значение поля {fieldName}.',
    EqualsLength: 'Введите корректное значение поля {fieldName} — ровно {params} симв.',
    MinLength: 'Введите корректное значение поля {fieldName} (не менее {params}).',
    MaxLength: 'Введите корректное значение поля {fieldName} (до {params} симв.).',
    MinMaxLength:
      'Введите корректное значение поля {fieldName} (от {params.min} до {params.max} симв.).',
    Pattern: 'Введите действительное значение поля {fieldName}.',
    IsNumber: 'Введите действительное значение поля {fieldName}.',
    MinNumber: 'Введите значение поля {fieldName}, превышающее {params}.',
    MaxNumber: 'Введите значение поля {fieldName} меньше, чем {params}.',
    MinMaxNumber: 'Введите значение поля {fieldName} от {params.min} до {params.max}.',
    IsDate: 'Введите дату (ДД ММ ГГГГ).',
    MinDate: 'Введите значение поля {fieldName}, превышающее {params, date, YYYYMMDD}.',
    MaxDate: 'Введите значение поля {fieldName} до {params, date, YYYYMMDD}.',
    MinMaxDate:
      'Введите значение поля {fieldName} от {params.min, date, YYYYMMDD} до {params.max, date, YYYYMMDD}.',
    IsDateDisabled: 'Эта дата недоступна, выберите другой вариант.',
    IsEmail: 'Введите действительное значение поля {fieldName} в формате «name@example.com».',
  },
  warning: {
    Required: 'Введите значение поля {fieldName}.',
    EqualsLength: 'Введите корректное значение поля {fieldName} — ровно {paramsn} симв.',
    MinLength: 'Введите корректное значение поля {fieldName} (не менее {params}).',
    MaxLength: 'Введите корректное значение поля {fieldName} (до {params} симв.).',
    MinMaxLength:
      'Введите корректное значение поля {fieldName} (от {params.min} до {params.max} симв.).',
    IsNumber: 'Введите действительное значение поля {fieldName}.',
    MinNumber: 'Введите значение поля {fieldName}, превышающее {params}.',
    MaxNumber: 'Введите значение поля {fieldName} меньше, чем {params}.',
    MinMaxNumber: 'Введите значение поля {fieldName} от {params.min} до {params.max}.',
    IsDate: 'Введите дату (ДД ММ ГГГГ).',
    MinDate: 'Введите значение поля {fieldName}, превышающее {params, date, YYYYMMDD}.',
    MaxDate: 'Введите значение поля {fieldName} до {params, date, YYYYMMDD}.',
    MinMaxDate:
      'Введите значение поля {fieldName} от {params.min, date, YYYYMMDD} до {params.max, date, YYYYMMDD}.',
    IsDateDisabled: 'Эта дата недоступна, выберите другой вариант.',
    IsEmail: 'Введите действительное значение поля {fieldName} в формате «name@example.com».',
  },
  success: {
    DefaultOk: 'OK',
    RandomOk:
      'success.DefaultOk,success.Correct,success.Succeeded,success.Ok,success.ThisIsRight,success.Changed,success.OkCorrect',
    Correct: 'Правильно',
    Succeeded: 'Успешно',
    Ok: 'OK!',
    ThisIsRight: 'Все верно.',
    Changed: 'Изменено!',
    OkCorrect: 'OK, правильно.',
  },
});


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2xpb25fdmFsaWRhdGUtbWVzc2FnZXNfdHJhbnNsYXRpb25zX3J1X2pzLmJ1bmRsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsaUVBQWU7QUFDZjtBQUNBLHNDQUFzQyxVQUFVO0FBQ2hELHFEQUFxRCxVQUFVLFVBQVUsT0FBTztBQUNoRixrREFBa0QsV0FBVyxXQUFXLE9BQU87QUFDL0Usa0RBQWtELFdBQVcsS0FBSyxPQUFPO0FBQ3pFO0FBQ0EseUNBQXlDLFdBQVcsS0FBSyxZQUFZLElBQUksV0FBVztBQUNwRixvREFBb0QsVUFBVTtBQUM5RCxxREFBcUQsVUFBVTtBQUMvRCx1Q0FBdUMsVUFBVSxlQUFlLE9BQU87QUFDdkUsdUNBQXVDLFdBQVcsYUFBYSxPQUFPO0FBQ3RFLDBDQUEwQyxXQUFXLElBQUksWUFBWSxJQUFJLFdBQVc7QUFDcEY7QUFDQSxxQ0FBcUMsVUFBVSxlQUFlLHVCQUF1QjtBQUNyRixxQ0FBcUMsV0FBVyxJQUFJLHVCQUF1QjtBQUMzRTtBQUNBLDhCQUE4QixXQUFXLElBQUksNEJBQTRCLElBQUksMkJBQTJCO0FBQ3hHO0FBQ0Esb0RBQW9ELFdBQVc7QUFDL0QsR0FBRztBQUNIO0FBQ0Esc0NBQXNDLFVBQVU7QUFDaEQscURBQXFELFVBQVUsVUFBVSxRQUFRO0FBQ2pGLGtEQUFrRCxXQUFXLFdBQVcsT0FBTztBQUMvRSxrREFBa0QsV0FBVyxLQUFLLE9BQU87QUFDekU7QUFDQSx5Q0FBeUMsV0FBVyxLQUFLLFlBQVksSUFBSSxXQUFXO0FBQ3BGLHFEQUFxRCxVQUFVO0FBQy9ELHVDQUF1QyxVQUFVLGVBQWUsT0FBTztBQUN2RSx1Q0FBdUMsV0FBVyxhQUFhLE9BQU87QUFDdEUsMENBQTBDLFdBQVcsSUFBSSxZQUFZLElBQUksV0FBVztBQUNwRjtBQUNBLHFDQUFxQyxVQUFVLGVBQWUsdUJBQXVCO0FBQ3JGLHFDQUFxQyxXQUFXLElBQUksdUJBQXVCO0FBQzNFO0FBQ0EsOEJBQThCLFdBQVcsSUFBSSw0QkFBNEIsSUFBSSwyQkFBMkI7QUFDeEc7QUFDQSxvREFBb0QsV0FBVztBQUMvRCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8va2FuYWxvYS1wcm9qZWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvQGxpb24vdmFsaWRhdGUtbWVzc2FnZXMvdHJhbnNsYXRpb25zL3J1LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgZXJyb3I6IHtcbiAgICBSZXF1aXJlZDogJ9CS0LLQtdC00LjRgtC1INC30L3QsNGH0LXQvdC40LUg0L/QvtC70Y8ge2ZpZWxkTmFtZX0uJyxcbiAgICBFcXVhbHNMZW5ndGg6ICfQktCy0LXQtNC40YLQtSDQutC+0YDRgNC10LrRgtC90L7QtSDQt9C90LDRh9C10L3QuNC1INC/0L7Qu9GPIHtmaWVsZE5hbWV9wqDigJQg0YDQvtCy0L3QviB7cGFyYW1zfcKg0YHQuNC80LIuJyxcbiAgICBNaW5MZW5ndGg6ICfQktCy0LXQtNC40YLQtSDQutC+0YDRgNC10LrRgtC90L7QtSDQt9C90LDRh9C10L3QuNC1INC/0L7Qu9GPIHtmaWVsZE5hbWV9ICjQvdC1INC80LXQvdC10LUge3BhcmFtc30pLicsXG4gICAgTWF4TGVuZ3RoOiAn0JLQstC10LTQuNGC0LUg0LrQvtGA0YDQtdC60YLQvdC+0LUg0LfQvdCw0YfQtdC90LjQtSDQv9C+0LvRjyB7ZmllbGROYW1lfSAo0LTQviB7cGFyYW1zfcKg0YHQuNC80LIuKS4nLFxuICAgIE1pbk1heExlbmd0aDpcbiAgICAgICfQktCy0LXQtNC40YLQtSDQutC+0YDRgNC10LrRgtC90L7QtSDQt9C90LDRh9C10L3QuNC1INC/0L7Qu9GPIHtmaWVsZE5hbWV9ICjQvtGCIHtwYXJhbXMubWlufSDQtNC+IHtwYXJhbXMubWF4fcKg0YHQuNC80LIuKS4nLFxuICAgIFBhdHRlcm46ICfQktCy0LXQtNC40YLQtSDQtNC10LnRgdGC0LLQuNGC0LXQu9GM0L3QvtC1INC30L3QsNGH0LXQvdC40LUg0L/QvtC70Y8ge2ZpZWxkTmFtZX0uJyxcbiAgICBJc051bWJlcjogJ9CS0LLQtdC00LjRgtC1INC00LXQudGB0YLQstC40YLQtdC70YzQvdC+0LUg0LfQvdCw0YfQtdC90LjQtSDQv9C+0LvRjyB7ZmllbGROYW1lfS4nLFxuICAgIE1pbk51bWJlcjogJ9CS0LLQtdC00LjRgtC1INC30L3QsNGH0LXQvdC40LUg0L/QvtC70Y8ge2ZpZWxkTmFtZX0sINC/0YDQtdCy0YvRiNCw0Y7RidC10LUge3BhcmFtc30uJyxcbiAgICBNYXhOdW1iZXI6ICfQktCy0LXQtNC40YLQtSDQt9C90LDRh9C10L3QuNC1INC/0L7Qu9GPIHtmaWVsZE5hbWV9INC80LXQvdGM0YjQtSwg0YfQtdC8IHtwYXJhbXN9LicsXG4gICAgTWluTWF4TnVtYmVyOiAn0JLQstC10LTQuNGC0LUg0LfQvdCw0YfQtdC90LjQtSDQv9C+0LvRjyB7ZmllbGROYW1lfSDQvtGCIHtwYXJhbXMubWlufSDQtNC+IHtwYXJhbXMubWF4fS4nLFxuICAgIElzRGF0ZTogJ9CS0LLQtdC00LjRgtC1INC00LDRgtGDICjQlNCUINCc0Jwg0JPQk9CT0JMpLicsXG4gICAgTWluRGF0ZTogJ9CS0LLQtdC00LjRgtC1INC30L3QsNGH0LXQvdC40LUg0L/QvtC70Y8ge2ZpZWxkTmFtZX0sINC/0YDQtdCy0YvRiNCw0Y7RidC10LUge3BhcmFtcywgZGF0ZSwgWVlZWU1NRER9LicsXG4gICAgTWF4RGF0ZTogJ9CS0LLQtdC00LjRgtC1INC30L3QsNGH0LXQvdC40LUg0L/QvtC70Y8ge2ZpZWxkTmFtZX0g0LTQviB7cGFyYW1zLCBkYXRlLCBZWVlZTU1ERH0uJyxcbiAgICBNaW5NYXhEYXRlOlxuICAgICAgJ9CS0LLQtdC00LjRgtC1INC30L3QsNGH0LXQvdC40LUg0L/QvtC70Y8ge2ZpZWxkTmFtZX0g0L7RgiB7cGFyYW1zLm1pbiwgZGF0ZSwgWVlZWU1NRER9INC00L4ge3BhcmFtcy5tYXgsIGRhdGUsIFlZWVlNTUREfS4nLFxuICAgIElzRGF0ZURpc2FibGVkOiAn0K3RgtCwINC00LDRgtCwINC90LXQtNC+0YHRgtGD0L/QvdCwLCDQstGL0LHQtdGA0LjRgtC1INC00YDRg9Cz0L7QuSDQstCw0YDQuNCw0L3Rgi4nLFxuICAgIElzRW1haWw6ICfQktCy0LXQtNC40YLQtSDQtNC10LnRgdGC0LLQuNGC0LXQu9GM0L3QvtC1INC30L3QsNGH0LXQvdC40LUg0L/QvtC70Y8ge2ZpZWxkTmFtZX0g0LIg0YTQvtGA0LzQsNGC0LUgwqtuYW1lQGV4YW1wbGUuY29twrsuJyxcbiAgfSxcbiAgd2FybmluZzoge1xuICAgIFJlcXVpcmVkOiAn0JLQstC10LTQuNGC0LUg0LfQvdCw0YfQtdC90LjQtSDQv9C+0LvRjyB7ZmllbGROYW1lfS4nLFxuICAgIEVxdWFsc0xlbmd0aDogJ9CS0LLQtdC00LjRgtC1INC60L7RgNGA0LXQutGC0L3QvtC1INC30L3QsNGH0LXQvdC40LUg0L/QvtC70Y8ge2ZpZWxkTmFtZX3CoOKAlCDRgNC+0LLQvdC+IHtwYXJhbXNufcKg0YHQuNC80LIuJyxcbiAgICBNaW5MZW5ndGg6ICfQktCy0LXQtNC40YLQtSDQutC+0YDRgNC10LrRgtC90L7QtSDQt9C90LDRh9C10L3QuNC1INC/0L7Qu9GPIHtmaWVsZE5hbWV9ICjQvdC1INC80LXQvdC10LUge3BhcmFtc30pLicsXG4gICAgTWF4TGVuZ3RoOiAn0JLQstC10LTQuNGC0LUg0LrQvtGA0YDQtdC60YLQvdC+0LUg0LfQvdCw0YfQtdC90LjQtSDQv9C+0LvRjyB7ZmllbGROYW1lfSAo0LTQviB7cGFyYW1zfcKg0YHQuNC80LIuKS4nLFxuICAgIE1pbk1heExlbmd0aDpcbiAgICAgICfQktCy0LXQtNC40YLQtSDQutC+0YDRgNC10LrRgtC90L7QtSDQt9C90LDRh9C10L3QuNC1INC/0L7Qu9GPIHtmaWVsZE5hbWV9ICjQvtGCIHtwYXJhbXMubWlufSDQtNC+IHtwYXJhbXMubWF4fcKg0YHQuNC80LIuKS4nLFxuICAgIElzTnVtYmVyOiAn0JLQstC10LTQuNGC0LUg0LTQtdC50YHRgtCy0LjRgtC10LvRjNC90L7QtSDQt9C90LDRh9C10L3QuNC1INC/0L7Qu9GPIHtmaWVsZE5hbWV9LicsXG4gICAgTWluTnVtYmVyOiAn0JLQstC10LTQuNGC0LUg0LfQvdCw0YfQtdC90LjQtSDQv9C+0LvRjyB7ZmllbGROYW1lfSwg0L/RgNC10LLRi9GI0LDRjtGJ0LXQtSB7cGFyYW1zfS4nLFxuICAgIE1heE51bWJlcjogJ9CS0LLQtdC00LjRgtC1INC30L3QsNGH0LXQvdC40LUg0L/QvtC70Y8ge2ZpZWxkTmFtZX0g0LzQtdC90YzRiNC1LCDRh9C10Lwge3BhcmFtc30uJyxcbiAgICBNaW5NYXhOdW1iZXI6ICfQktCy0LXQtNC40YLQtSDQt9C90LDRh9C10L3QuNC1INC/0L7Qu9GPIHtmaWVsZE5hbWV9INC+0YIge3BhcmFtcy5taW59INC00L4ge3BhcmFtcy5tYXh9LicsXG4gICAgSXNEYXRlOiAn0JLQstC10LTQuNGC0LUg0LTQsNGC0YMgKNCU0JQg0JzQnCDQk9CT0JPQkykuJyxcbiAgICBNaW5EYXRlOiAn0JLQstC10LTQuNGC0LUg0LfQvdCw0YfQtdC90LjQtSDQv9C+0LvRjyB7ZmllbGROYW1lfSwg0L/RgNC10LLRi9GI0LDRjtGJ0LXQtSB7cGFyYW1zLCBkYXRlLCBZWVlZTU1ERH0uJyxcbiAgICBNYXhEYXRlOiAn0JLQstC10LTQuNGC0LUg0LfQvdCw0YfQtdC90LjQtSDQv9C+0LvRjyB7ZmllbGROYW1lfSDQtNC+IHtwYXJhbXMsIGRhdGUsIFlZWVlNTUREfS4nLFxuICAgIE1pbk1heERhdGU6XG4gICAgICAn0JLQstC10LTQuNGC0LUg0LfQvdCw0YfQtdC90LjQtSDQv9C+0LvRjyB7ZmllbGROYW1lfSDQvtGCIHtwYXJhbXMubWluLCBkYXRlLCBZWVlZTU1ERH0g0LTQviB7cGFyYW1zLm1heCwgZGF0ZSwgWVlZWU1NRER9LicsXG4gICAgSXNEYXRlRGlzYWJsZWQ6ICfQrdGC0LAg0LTQsNGC0LAg0L3QtdC00L7RgdGC0YPQv9C90LAsINCy0YvQsdC10YDQuNGC0LUg0LTRgNGD0LPQvtC5INCy0LDRgNC40LDQvdGCLicsXG4gICAgSXNFbWFpbDogJ9CS0LLQtdC00LjRgtC1INC00LXQudGB0YLQstC40YLQtdC70YzQvdC+0LUg0LfQvdCw0YfQtdC90LjQtSDQv9C+0LvRjyB7ZmllbGROYW1lfSDQsiDRhNC+0YDQvNCw0YLQtSDCq25hbWVAZXhhbXBsZS5jb23Cuy4nLFxuICB9LFxuICBzdWNjZXNzOiB7XG4gICAgRGVmYXVsdE9rOiAnT0snLFxuICAgIFJhbmRvbU9rOlxuICAgICAgJ3N1Y2Nlc3MuRGVmYXVsdE9rLHN1Y2Nlc3MuQ29ycmVjdCxzdWNjZXNzLlN1Y2NlZWRlZCxzdWNjZXNzLk9rLHN1Y2Nlc3MuVGhpc0lzUmlnaHQsc3VjY2Vzcy5DaGFuZ2VkLHN1Y2Nlc3MuT2tDb3JyZWN0JyxcbiAgICBDb3JyZWN0OiAn0J/RgNCw0LLQuNC70YzQvdC+JyxcbiAgICBTdWNjZWVkZWQ6ICfQo9GB0L/QtdGI0L3QvicsXG4gICAgT2s6ICdPSyEnLFxuICAgIFRoaXNJc1JpZ2h0OiAn0JLRgdC1INCy0LXRgNC90L4uJyxcbiAgICBDaGFuZ2VkOiAn0JjQt9C80LXQvdC10L3QviEnLFxuICAgIE9rQ29ycmVjdDogJ09LLCDQv9GA0LDQstC40LvRjNC90L4uJyxcbiAgfSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=